name: CI-lint-format

run-name: "Workflow performing CI steps: linting and formatting"

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1

jobs:
  lint-format:
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-lint-format-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-lint-format-cargo-
      - name: Install deps
      # required by sc-network-sync
      # required by nh-runtime
      # required by nh-runtime
        run: |
            sudo apt-get install protobuf-compiler
            rustup target add wasm32-unknown-unknown
            rustup component add rust-src
      - name: Linting
        if: matrix.os == 'ubuntu-latest'
        run: cargo clippy --release -- --deny warnings
      - name: Formatting
        if: matrix.os == 'ubuntu-latest'
        run: cargo fmt --check