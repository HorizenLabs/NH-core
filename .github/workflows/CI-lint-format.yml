name: CI-lint-format

run-name: "Workflow performing CI steps: linting and formatting"

on:
  workflow_call:

env:
  RUST_BACKTRACE: 1

jobs:
  lint-format:
    strategy:
      matrix:
        os: [ubuntu-latest]
        # os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-lint-format-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-lint-format-cargo-
      - name: Install deps
      # required by sc-network-sync
      # required by nh-runtime
      # required by nh-runtime
        run: |
            sudo apt-get install protobuf-compiler
            rustup target add wasm32-unknown-unknown
            rustup component add rust-src
      - name: Linting
        shell: bash
        run: cargo clippy --release -- --deny warnings 2>&1 | tee linting_output.txt
      - name: Upload Linting Output
        uses: actions/upload-artifact@v4
        with:
          name: linting-output
          path: linting_output.txt
          if-no-files-found: warn
          retention-days: 1
          compression-level: 0
          overwrite: true
      - name: Formatting
        shell: bash
        run: cargo fmt --check 2>&1 | tee formatting_output.txt
      - name: Upload Formatting Output
        uses: actions/upload-artifact@v4
        with:
          name: formatting-output
          path: formatting_output.txt
          if-no-files-found: warn
          retention-days: 1
          compression-level: 0
          overwrite: true